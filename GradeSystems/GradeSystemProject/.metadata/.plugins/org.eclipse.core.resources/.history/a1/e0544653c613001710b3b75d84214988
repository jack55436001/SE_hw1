import java.util.*;

public class UI {
	private GradeSystems gradeSystems;
	private Scanner scanner;
	
	/* method  ----------------------------------------------------------------------------------                                                                                                    
	* 
	*
	* @param 
	* @return 
	*
	* @throws 
	*	
	*Pseudo code:
	*1.
    *
	* Time estimate : O (1)
	* Example: 
	----------------------------------------------------------------------------------------------------------*/
	public UI(){
		gradeSystems = new GradeSystems();
		scanner = new Scanner(System.in);
	}
	
	/* method  ----------------------------------------------------------------------------------                                                                                                    
	* 
	*
	* @param 
	* @return 
	*
	* @throws 
	*	
	*Pseudo code:
	*1.
    *
	* Time estimate : O (1)
	* Example: 
	----------------------------------------------------------------------------------------------------------*/
	@Override
	public void finalize()
	{
		scanner.close();
	}
	
	/* method  ----------------------------------------------------------------------------------                                                                                                    
	* 
	*
	* @param 
	* @return 
	*
	* @throws 
	*	
	*Pseudo code:
	*1.
    *
	* Time estimate : O (1)
	* Example: 
	----------------------------------------------------------------------------------------------------------*/
	public boolean checkID(int id){
		return gradeSystems.containsID(id);
	}
	
	/* method  ----------------------------------------------------------------------------------                                                                                                    
	* 
	*
	* @param 
	* @return 
	*
	* @throws 
	*	
	*Pseudo code:
	*1.
    *
	* Time estimate : O (1)
	* Example: 
	----------------------------------------------------------------------------------------------------------*/
	public String promptID(){
		String id;
		System.out.println("請輸入ID 或 輸入Q離開：");
		id = scanner.next();
		return id;
	}
	
	/* method  ----------------------------------------------------------------------------------                                                                                                    
	* 
	*
	* @param 
	* @return 
	*
	* @throws 
	*	
	*Pseudo code:
	*1.
    *
	* Time estimate : O (1)
	* Example: 
	----------------------------------------------------------------------------------------------------------*/
	public void showFinishMsg(){
		System.out.println("謝謝使用本系統");
	}
	
	/* method  ----------------------------------------------------------------------------------                                                                                                    
	* 
	*
	* @param 
	* @return 
	*
	* @throws 
	*	
	*Pseudo code:
	*1.
    *
	* Time estimate : O (1)
	* Example: 
	----------------------------------------------------------------------------------------------------------*/
	public void showWelcomeMsg(int id){
		String name = gradeSystems.findNameByID(id);
		System.out.println("歡迎 "+name);
	}
	
	/* method  ----------------------------------------------------------------------------------                                                                                                    
	* 
	*
	* @param 
	* @return 
	*
	* @throws 
	*	
	*Pseudo code:
	*1.
    *
	* Time estimate : O (1)
	* Example: 
	----------------------------------------------------------------------------------------------------------*/
	public boolean promptCommand(int id){
		System.out.println("輸入指令\n1) G 顯示成績 (Grade)\n2) "
				+ "R 顯示排名 (Rank)\n3) A 顯示平均 (Average)\n4) W 更新配分 (Weight)\n5) E 離開選單 (Exit)");
		try{
			String command = scanner.next();     
			if(command.equals("G"))	   gradeSystems.showGrade(id);
			else if(command.equals("R"))	gradeSystems.showRank(id);
			else if(command.equals("A"))	gradeSystems.showAverage();
			else if(command.equals("W"))	weightFunction();
			else if(command.equals("E"))	return false;
			else	throw new CommandException();
		}
		catch(CommandException e){
			e.CommandError();
		}
		catch(InputMismatchException e){
			System.out.println("Please enter number between 0 to 100.");
		}
		promptExit();
		return true;
	}
	
	/* method  ----------------------------------------------------------------------------------                                                                                                    
	* 
	*
	* @param 
	* @return 
	*
	* @throws 
	*	
	*Pseudo code:
	*1.
    *
	* Time estimate : O (1)
	* Example: 
	----------------------------------------------------------------------------------------------------------*/
	private void weightFunction()
	{
		gradeSystems.showOldWeights();
		int [] newWeights=getNewWeights();
		showNewWeights(newWeights);
		System.out.println("以上正確嗎? Y (Yes) 或 N (No)");
		String t = scanner.next();
		try{
			if(t.equals("Y"))	gradeSystems.updateWeights(newWeights);
			else if(t.equals("N"))	System.out.println("Weights not change");
			else throw new CommandException();
		}
		catch(CommandException e){
			e.CommandError();
		}
	}
	
	/* method  ----------------------------------------------------------------------------------                                                                                                    
	* 
	*
	* @param 
	* @return 
	*
	* @throws 
	*	
	*Pseudo code:
	*1.
    *
	* Time estimate : O (1)
	* Example: 
	----------------------------------------------------------------------------------------------------------*/
	public void promptExit(){
		System.out.println("請輸入 Ｅ 回到主選單");
		
		while(true){
			String command = scanner.next();
			if(command.equals("E"))break;
		}
		
	}
	
	/* method  ----------------------------------------------------------------------------------                                                                                                    
	* 
	*
	* @param 
	* @return 
	*
	* @throws 
	*	
	*Pseudo code:
	*1.
    *
	* Time estimate : O (1)
	* Example: 
	----------------------------------------------------------------------------------------------------------*/
	private int[] getNewWeights() throws InputMismatchException{
		int[] newWeights = {0,0,0,0,0};
		System.out.println("---New Weights(%)---");
		System.out.println("Lab1: ");
		newWeights[0] = scanner.nextInt();
		System.out.println("Lab2: ");
		newWeights[1] = scanner.nextInt();
		System.out.println("Lab3: ");
		newWeights[2] = scanner.nextInt();
		System.out.println("midTerm: ");
		newWeights[3] = scanner.nextInt();
		System.out.println("finalExam: ");
		newWeights[4] = scanner.nextInt();
		
		return newWeights;
	}
	
	/* method  ----------------------------------------------------------------------------------                                                                                                    
	* 
	*
	* @param 
	* @return 
	*
	* @throws 
	*	
	*Pseudo code:
	*1.
    *
	* Time estimate : O (1)
	* Example: 
	----------------------------------------------------------------------------------------------------------*/
	public void showNewWeights(int [] NewWeights){
		System.out.println("---Confirm New Weights(%)---");
		System.out.println("Lab1: " + (int)(NewWeights[0]) +"%");
		System.out.println("Lab2: " + (int)(NewWeights[1])+"%");
		System.out.println("Lab3: " + (int)(NewWeights[2]) +"%");
		System.out.println("midTerm: " + (int)(NewWeights[3]) +"%");
		System.out.println("finalExam: " + (int)(NewWeights[4]) +"%");
	}
}
