import static org.junit.Assert.*;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.InputStream;
import java.io.PrintStream;

import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;

public class IntegrationTest { 
	private final ByteArrayOutputStream outContent = new ByteArrayOutputStream();
	private static int next_id;
	
	/* method  setBefore----------------------------------------------------------------------------------                                                                                                    
	* 初始化next_id,用於切換模擬使用者input
	*
	* @param 無
	* @return 無
	*
	* @throws Exception
	*	
	*Pseudo code:
	*1.將next_id初始化為0
    *
	* Time estimate : O (1)
	* Example:IntegrationTest.setBefore()   初始化next_id
	----------------------------------------------------------------------------------------------------------*/
	@BeforeClass
	public static void setBefore() throws Exception{
		next_id = 0;
	}
	
	/* method  setUp----------------------------------------------------------------------------------                                                                                                    
	* 初始化UI,setOut content做之後console比對,setIn content用於模擬使用者輸入
	*
	* @param 無
	* @return 無
	*
	* @throws Exception
	*	
	*Pseudo code:
	*1.利用counter選擇需要的test input,並且setIn test input
	*2.將outContent set完畢
	*3.創建一個UI
    *
	* Time estimate : O (1)
	* Example:IntegrationTest.set()   創建UI,設定相關input output參數
	----------------------------------------------------------------------------------------------------------*/
	@Before
	public void setUp() throws Exception {
		String input = "";
		if(next_id==1)	input="962001044\nG\nE\nE\nQ\n";
		else if(next_id==2)	input = "962001044\nR\nE\nE\nQ\n";
		else if(next_id==3)	input = "962001044\nA\nE\nE\nQ\n";
		else if(next_id==4)	input = "962001044\nW\n20\n20\n20\n20\n20\nY\nE\nG\nE\nE\nQ\n";
		else if(next_id==0) input = "103062319\n962001044\nK\nE\nW\n120\n10\n10\n10\n10\nY\nE\nW\n1"
				+ "\n1\n1\n1\n1\nY\nE\nE\nQ\n";
		InputStream in = new ByteArrayInputStream(input.getBytes());
	    System.setIn(in);
	    System.setOut(new PrintStream(outContent));
	}

	/* method  tearDown----------------------------------------------------------------------------------                                                                                                    
	* 關閉console output
	*
	* @param 無
	* @return 無
	*
	* @throws Exception
	*	
	*Pseudo code:
	*1.將console output設為null
    *
	* Time estimate : O (1)
	* Example:IntegrationTest.tearDown()   測試完畢關閉console output
	----------------------------------------------------------------------------------------------------------*/
	@After
	public void tearDown() throws Exception {
		System.setOut(null);
	}

	/* method  testGrade----------------------------------------------------------------------------------                                                                                                    
	* 測試顯示成績功能 指令為 962001044 -> G -> E -> E -> Q
	*
	* @param 無
	* @return 無
	*
	* @throws 無
	*	
	*Pseudo code:
	*1.利用assertEquals判斷預期output是否與程式執行結果相同
    *
	* Time estimate : O (1)
	* Example:IntegrationTest.testGrade()  測試顯示成績功能
	----------------------------------------------------------------------------------------------------------*/
	@Test
	public void testGrade() {
		GradeSystemProject.main(null);
		assertEquals("請輸入ID 或 輸入Q離開：\n歡迎 凌宗廷\n輸入指令\n1) G 顯示成績 (Grade)\n2) R "
				+ "顯示排名 (Rank)\n3) A 顯示平均 (Average)\n4) W 更新配分 (Weight)\n5) E 離開選單 "
				+ "(Exit)\nLab1: 87\nLab2: 86\nLab3: 98\nmid-term: 88\nfinal exam: 87\n"
				+ "total grade: 88\n請輸入 Ｅ 回到主選單\n\n輸入指令\n1) G 顯示成績 (Grade)\n2) "
				+ "R 顯示排名 (Rank)\n3) A 顯示平均 (Average)\n4) W 更新配分 (Weight)\n5) "
				+ "E 離開選單 (Exit)\n請輸入ID 或 輸入Q離開：\n謝謝使用本系統\n",outContent.toString());
		next_id++;
	}
	
	/* method  testRank----------------------------------------------------------------------------------                                                                                                    
	* 測試顯示排名功能 指令為 962001044 -> R -> E -> E -> Q
	*
	* @param 無
	* @return 無
	*
	* @throws 無
	*	
	*Pseudo code:
	*1.利用assertEquals判斷預期output是否與程式執行結果相同
    *
	* Time estimate : O (1)
	* Example:IntegrationTest.testRank()  測試顯示排名功能
	----------------------------------------------------------------------------------------------------------*/
	@Test
	public void testRank() {
		GradeSystemProject.main(null);
		assertEquals("請輸入ID 或 輸入Q離開：\n歡迎 凌宗廷\n輸入指令\n1) G 顯示成績 (Grade)\n2) R 顯示排名 "
				+ "(Rank)\n3) A 顯示平均 (Average)\n4) W 更新配分 (Weight)\n5) E 離開選單 (Exit)\nRank: "
				+ "37\n請輸入 Ｅ 回到主選單\n\n輸入指令\n1) G 顯示成績 (Grade)\n2) R 顯示排名 (Rank)\n3) A "
				+ "顯示平均 (Average)\n4) W 更新配分 (Weight)\n5) E 離開選單 (Exit)\n請輸入ID 或 輸入Q離開："
				+ "\n謝謝使用本系統\n",outContent.toString());
		next_id++;
	}
	
	/* method  testAverage----------------------------------------------------------------------------------                                                                                                    
	* 測試顯示平均功能 指令為 962001044 -> A -> E -> E -> Q
	*
	* @param 無
	* @return 無
	*
	* @throws 無
	*	
	*Pseudo code:
	*1.利用assertEquals判斷預期output是否與程式執行結果相同
    *
	* Time estimate : O (1)
	* Example:IntegrationTest.testAverage()  測試顯示平均功能
	----------------------------------------------------------------------------------------------------------*/
	@Test
	public void testAverage() {
		GradeSystemProject.main(null);
		assertEquals("請輸入ID 或 輸入Q離開：\n歡迎 凌宗廷\n輸入指令\n1) G 顯示成績 (Grade)\n2) R 顯示排名 "
				+ "(Rank)\n3) A 顯示平均 (Average)\n4) W 更新配分 (Weight)\n5) E 離開選單 (Exit)\nAverage:"
				+ "\nLab1 :90.32\nLab2 :87.71\nLab3 :89.10\nmidTerm :89.52\nfinalExam :89.73\ntotal"
				+ "Grade :89.57\n請輸入 Ｅ 回到主選單\n\n輸入指令\n1) G 顯示成績 (Grade)\n2) R 顯示排名 (Rank)"
				+ "\n3) A 顯示平均 (Average)\n4) W 更新配分 (Weight)\n5) E 離開選單 (Exit)\n請輸入ID 或"
				+ " 輸入Q離開：\n謝謝使用本系統\n",outContent.toString());
		next_id++;
	}
	
	/* method  testReweights----------------------------------------------------------------------------------                                                                                                    
	* 測試更新配分功能 指令為 962001044 -> W -> 20 -> 20 -> 20 -> 20 -> 20 -> Y -> E -> G -> E -> E -> Q
	*
	* @param 無
	* @return 無
	*
	* @throws 無
	*	
	*Pseudo code:
	*1.利用assertEquals判斷預期output是否與程式執行結果相同
    *
	* Time estimate : O (1)
	* Example:IntegrationTest.testReweights()  測試更新配分功能
	----------------------------------------------------------------------------------------------------------*/
	@Test
	public void testReweights() {
		GradeSystemProject.main(null);
		assertEquals("請輸入ID 或 輸入Q離開：\n歡迎 凌宗廷\n輸入指令\n1) G 顯示成績 (Grade)\n2) R 顯示排名 (Rank)\n3) "
				+ "A 顯示平均 (Average)\n4) W 更新配分 (Weight)\n5) E 離開選單 (Exit)\n---Old Weights(%)---\nLab1: "
				+ "10%\nLab2: 10%\nLab3: 10%\nmid-term: 30%\nfinal exam: 40%\n---New Weights(%)---\nLab1: \nLab2: "
				+ "\nLab3: \nmidTerm: \nfinalExam: \n---Confirm New Weights(%)---\nLab1: 20%\nLab2: 20%\nLab3: "
				+ "20%\nmidTerm: 20%\nfinalExam: 20%\n以上正確嗎? Y (Yes) 或 N (No)\nWeights changed!\n請輸入 Ｅ "
				+ "回到主選單\n\n輸入指令\n1) G 顯示成績 (Grade)\n2) R 顯示排名 (Rank)\n3) A 顯示平均 (Average)\n4) W "
				+ "更新配分 (Weight)\n5) E 離開選單 (Exit)\nLab1: 87\nLab2: 86\nLab3: 98\nmid-term: 88\nfinal exam: "
				+ "87\ntotal grade: 89\n請輸入 Ｅ 回到主選單\n\n輸入指令\n1) G 顯示成績 (Grade)\n2) R 顯示排名 (Rank)\n3) "
				+ "A 顯示平均 (Average)\n4) W 更新配分 (Weight)\n5) E 離開選單 (Exit)\n請輸入ID 或 輸入Q離開："
				+ "\n謝謝使用本系統\n",outContent.toString());
		next_id++;
	}
	
	@Test
	public void testExceptions() {
		GradeSystemProject.main(null);
		assertEquals("請輸入ID 或 輸入Q離開：\nId 103062319 not found\n請輸入ID 或 輸入Q離開：\n歡迎 凌宗廷"
				+ "\n輸入指令\n1) G 顯示成績 (Grade)\n2) R 顯示排名 (Rank)\n3) A 顯示平均 (Average)\n4) "
				+ "W 更新配分 (Weight)\n5) E 離開選單 (Exit)\nCommand Error(EX:若要顯示成績請輸入Ｇ)\n請輸"
				+ "入 Ｅ 回到主選單\n\n輸入指令\n1) G 顯示成績 (Grade)\n2) R 顯示排名 (Rank)\n3) A 顯示平均 "
				+ "(Average)\n4) W 更新配分 (Weight)\n5) E 離開選單 (Exit)\n---Old Weights(%)---\nLab"
				+ "1: 10%\nLab2: 10%\nLab3: 10%\nmid-term: 30%\nfinal exam: 40%\n---New Weights(%)"
				+ "---\nLab1: \nLab2: \nLab3: \nmidTerm: \nfinalExam: \n---Confirm New Weights(%)-"
				+ "--\nLab1: 120%\nLab2: 10%\nLab3: 10%\nmidTerm: 10%\nfinalExam: 10%\n以上正確嗎? "
				+ "Y (Yes) 或 N (No)\n120 should be 0 to 100.\n請輸入 Ｅ 回到主選單\n\n輸入指令\n1) "
				+ "G 顯示成績 (Grade)\n2) R 顯示排名 (Rank)\n3) A 顯示平均 (Average)\n4) W 更新配分 "
				+ "(Weight)\n5) E 離開選單 (Exit)\n---Old Weights(%)---\nLab1: 10%\nLab2: 10%\nLab"
				+ "3: 10%\nmid-term: 30%\nfinal exam: 40%\n---New Weights(%)---\nLab1: \nLab2: \nL"
				+ "ab3: \nmidTerm: \nfinalExam: \n---Confirm New Weights(%)---\nLab1: 1%\nLab2: 1%\nL"
				+ "ab3: 1%\nmidTerm: 1%\nfinalExam: 1%\n以上正確嗎? Y (Yes) 或 N (No)\nThe sum over a"
				+ "ll weights should be 100.\n請輸入 Ｅ 回到主選單\n\n輸入指令\n1) G 顯示成績 (Grade)\n2) "
				+ "R 顯示排名 (Rank)\n3) A 顯示平均 (Average)\n4) W 更新配分 (Weight)\n5) E 離開選單 (Exit)"
				+ "\n請輸入ID 或 輸入Q離開：\n謝謝使用本系統\n",outContent.toString());
		next_id++;
	}
}
