import static org.junit.Assert.*;

import java.io.ByteArrayOutputStream;
import java.io.PrintStream;

import org.junit.After;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;

public class GradeSystemsTest {
	GradeSystems gs = null;
	private final ByteArrayOutputStream outContent = new ByteArrayOutputStream();

	/* method  setUp----------------------------------------------------------------------------------                                                                                                    
	* 初始化GradeSystemsTest
	*
	* @param 無
	* @return 無
	*
	* @throws Exception
	*	
	*Pseudo code:
	*1.創建並初始化GradeSystems,,並將outContent set完畢
    *
	* Time estimate : O (1)
	* Example:GradeSystemsTest.setUp()   初始化GradeSystemsTest
	----------------------------------------------------------------------------------------------------------*/
	@Before
	public void setUp() throws Exception {
		gs = new GradeSystems();
	    System.setOut(new PrintStream(outContent));
	}

	/* method  tearDown----------------------------------------------------------------------------------                                                                                                    
	* 關閉console output
	*
	* @param 無
	* @return 無
	*
	* @throws Exception
	*	
	*Pseudo code:
	*1.將console output設為null
    *
	* Time estimate : O (1)
	* Example:CommandExceptionTest.tearDown()   測試完畢關閉console output
	----------------------------------------------------------------------------------------------------------*/
	@After
	public void tearDown() throws Exception {
		System.setOut(null);
	}

	/* method  testShowGrade1----------------------------------------------------------------------------------                                                                                                    
	* 測試955002056此學號之ShowGrade是否如預期
	*
	* @param 無
	* @return 無
	*
	* @throws 無
	*	
	*Pseudo code:
	*1.呼叫showGrade(955002056),利用assertEquals比較手寫output與實際output有無差別
    *
	* Time estimate : O (1)
	* Example:GradeSystemsTest.testShowGrade1()  測試testShowGrade1
	----------------------------------------------------------------------------------------------------------*/
	@Test
	public void testShowGrade1() {
		gs.showGrade(955002056);
		String ans = "Lab1: 88\nLab2: 92\nLab3: 88\nmid-term: 98\nfinal exam: 91\ntotal grade: 93\n";
		assertEquals(ans,outContent.toString());
	}
	
	/* method  testShowGrade2----------------------------------------------------------------------------------                                                                                                    
	* 測試965002044此學號之ShowGrade是否如預期
	*
	* @param 無
	* @return 無
	*
	* @throws 無
	*	
	*Pseudo code:
	*1.呼叫showGrade(965002044),利用assertEquals比較手寫output與實際output有無差別
    *
	* Time estimate : O (1)
	* Example:GradeSystemsTest.testShowGrade2()  測試testShowGrade2
	----------------------------------------------------------------------------------------------------------*/
	@Test
	public void testShowGrade2() {
		gs.showGrade(965002044);
		String ans = "Lab1: 85\nLab2: 86\nLab3: 80\nmid-term: 81\nfinal exam: 88\ntotal grade: 85\n";
		assertEquals(ans,outContent.toString());
	}
	
	/* method  testShowRank1----------------------------------------------------------------------------------                                                                                                    
	* 測試955002056此學號之ShowRank是否如預期
	*
	* @param 無
	* @return 無
	*
	* @throws 無
	*	
	*Pseudo code:
	*1.呼叫showRank(955002056),利用assertEquals比較手寫output與實際output有無差別
    *
	* Time estimate : O (1)
	* Example:GradeSystemsTest.testShowRank1()  測試testShowRank1
	----------------------------------------------------------------------------------------------------------*/
	@Test
	public void testShowRank1(){
		gs.showRank(955002056);
		String ans = "Rank: 9\n";
		assertEquals(ans,outContent.toString());
	}
	
	/* method  testShowRank2----------------------------------------------------------------------------------                                                                                                    
	* 測試965002044此學號之ShowRank是否如預期
	*
	* @param 無
	* @return 無
	*
	* @throws 無
	*	
	*Pseudo code:
	*1.呼叫showRank(965002044),利用assertEquals比較手寫output與實際output有無差別
    *
	* Time estimate : O (1)
	* Example:GradeSystemsTest.testShowRank2()  測試testShowRank2
	----------------------------------------------------------------------------------------------------------*/
	@Test
	public void testShowRank2(){
		gs.showRank(965002044);
		String ans = "Rank: 58\n";
		assertEquals(ans,outContent.toString());
	}
	
	/* method  testContainsID1----------------------------------------------------------------------------------                                                                                                    
	* 測試955002056此學號之ContainsID是否如預期
	*
	* @param 無
	* @return 無
	*
	* @throws 無
	*	
	*Pseudo code:
	*1.呼叫containsID(955002056),利用assertEquals比較預期與回傳值有無差別
    *
	* Time estimate : O (1)
	* Example:GradeSystemsTest.testContainsID1()  測試testContainsID1
	----------------------------------------------------------------------------------------------------------*/
	@Test
	public void testContainsID1(){
		assertEquals(true,gs.containsID(955002056));
	}
	
	/* method  testContainsID2----------------------------------------------------------------------------------                                                                                                    
	* 測試103062319此學號之ContainsID是否如預期
	*
	* @param 無
	* @return 無
	*
	* @throws 無
	*	
	*Pseudo code:
	*1.呼叫containsID(103062319),利用assertEquals比較預期與回傳值有無差別
    *
	* Time estimate : O (1)
	* Example:GradeSystemsTest.testContainsID2()  測試testContainsID2
	----------------------------------------------------------------------------------------------------------*/
	@Test
	public void testContainsID2(){
		assertEquals(false,gs.containsID(103062319));
	}
	
	/* method  testUpdateWeights1----------------------------------------------------------------------------------                                                                                                    
	* 測試{20,20,20,20,20}此比重下,UpdateWeights是否如預期
	*
	* @param 無
	* @return 無
	*
	* @throws 無
	*	
	*Pseudo code:
	*1.呼叫updateWeights(new int[]{20,20,20,20,20}),利用assertEquals比較預期與回傳值有無差別
    *
	* Time estimate : O (1)
	* Example:GradeSystemsTest.testUpdateWeights1()  測試testUpdateWeights1
	----------------------------------------------------------------------------------------------------------*/
	@Test
	public void testUpdateWeights1(){
		gs.updateWeights(new int[]{20,20,20,20,20});
		Assert.assertArrayEquals(new float[]{0.20f,0.20f,0.20f,0.20f,0.20f},gs.weights,0);
	}
	
	/* method  testUpdateWeights2----------------------------------------------------------------------------------                                                                                                    
	* 測試{30,30,20,10,10}此比重下,UpdateWeights是否如預期
	*
	* @param 無
	* @return 無
	*
	* @throws 無
	*	
	*Pseudo code:
	*1.呼叫updateWeights(new int[]{30,30,20,10,10}),利用assertEquals比較預期與回傳值有無差別
    *
	* Time estimate : O (1)
	* Example:GradeSystemsTest.testUpdateWeights2()  測試testUpdateWeights2
	----------------------------------------------------------------------------------------------------------*/
	@Test
	public void testUpdateWeights2(){
		gs.updateWeights(new int[]{30,30,20,10,10});
		Assert.assertArrayEquals(new float[]{0.30f,0.30f,0.20f,0.10f,0.10f},gs.weights,0);
	}
	
	/* method  testShowOldWeights1----------------------------------------------------------------------------------                                                                                                    
	* 測試顯示當前比重是否正確
	*
	* @param 無
	* @return 無
	*
	* @throws 無
	*	
	*Pseudo code:
	*1.呼叫showOldWeights(),利用assertEquals比較預期與outContent.toString()有無差別
    *
	* Time estimate : O (1)
	* Example:GradeSystemsTest.testShowOldWeights1()  測試testShowOldWeights1
	----------------------------------------------------------------------------------------------------------*/
	@Test
	public void testShowOldWeights1(){
		gs.showOldWeights();
		String ans = "---Old Weights(%)---\nLab1: 10%\nLab2: 10%\nLab3: 10%\nmid-term: 30%\nfinal exam: 40%\n";
		assertEquals(ans,outContent.toString());
	}
	
	/* method  testShowOldWeights2----------------------------------------------------------------------------------                                                                                                    
	* 測試顯示當前比重是否正確
	*
	* @param 無
	* @return 無
	*
	* @throws 無
	*	
	*Pseudo code:
	*1.呼叫showOldWeights(),利用assertEquals比較預期與outContent.toString()有無差別
    *
	* Time estimate : O (1)
	* Example:GradeSystemsTest.testShowOldWeights2()  測試testShowOldWeights2
	----------------------------------------------------------------------------------------------------------*/
	@Test
	public void testShowOldWeights2(){
		gs.showOldWeights();
		String ans = "---Old Weights(%)---\nLab1: 10%\nLab2: 10%\nLab3: 10%\nmid-term: 30%\nfinal exam: 40%\n";
		assertEquals(ans,outContent.toString());
	}
	
	/* method  testFindNameByID1----------------------------------------------------------------------------------                                                                                                    
	* 測試利用ID取得名字是否正確
	*
	* @param 無
	* @return 無
	*
	* @throws 無
	*	
	*Pseudo code:
	*1.呼叫findNameByID(965002044),利用assertEquals比較預期與"商揚夏"有無差別
    *
	* Time estimate : O (1)
	* Example:GradeSystemsTest.testFindNameByID1()  測試testFindNameByID1
	----------------------------------------------------------------------------------------------------------*/
	@Test
	public void testFindNameByID1(){
		assertEquals("商揚夏",gs.findNameByID(965002044));
	}
	
	/* method  testFindNameByID2----------------------------------------------------------------------------------                                                                                                    
	* 測試利用ID取得名字,測試不存在之case
	*
	* @param 無
	* @return 無
	*
	* @throws 無
	*	
	*Pseudo code:
	*1.呼叫findNameByID(103062319),利用assertEquals比較預期與null有無差別
    *
	* Time estimate : O (1)
	* Example:GradeSystemsTest.testFindNameByID2()  測試testFindNameByID2
	----------------------------------------------------------------------------------------------------------*/
	@Test
	public void testFindNameByID2(){
		assertEquals(null,gs.findNameByID(103062319));
	}
	
	/* method  testShowAverage1----------------------------------------------------------------------------------                                                                                                    
	* 測試利用ID取得名字,測試不存在之case
	*
	* @param 無
	* @return 無
	*
	* @throws 無
	*	
	*Pseudo code:
	*1.呼叫showAverage(),利用assertEquals比較手寫預期output與實際outContent.toString()有無差別
    *
	* Time estimate : O (1)
	* Example:GradeSystemsTest.testShowAverage1()  測試testShowAverage1
	----------------------------------------------------------------------------------------------------------*/
	@Test
	public void testShowAverage1(){
		gs.showAverage();
		String ans = "Average:\nLab1 :90.32\nLab2 :87.71\nLab3 :89.10\nmidTerm :89.52\nfinalExam :89.73\ntotalGrade :89.57\n";		
		assertEquals(ans,outContent.toString());
	}
	@Test
	public void testShowAverage2(){
		gs.showAverage();
		String ans = "Average:\nLab1 :90.32\nLab2 :87.71\nLab3 :89.10\nmidTerm :89.52\nfinalExam :89.73\ntotalGrade :89.57\n";		
		assertEquals(ans,outContent.toString());
	}
	
	
}
